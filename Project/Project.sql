CREATE DATABASE project;

USE project;

#Q1. What is the total revenue generated by the restaurant?

SELECT 
	sum(total_amount) as revenue
FROM 
orders;

#Q2. What is the average amount spent per order?

SELECT 
	avg(total_amount) as avg_amt
FROM 
	orders;


#Q3. Menu items with prices higher than the average menu item price.

SELECT 
	name
FROM menu_items
WHERE price > ( SELECT 
				avg(price) as avg_price
				FROM menu_items);



#Q4. What are the top 5 best-selling menu items by quantity?

SELECT
	name
	, sum(quantity) as total_quantity
FROM menu_items m
JOIN  transactions t ON m.item_id = t.item_id
GROUP BY name
ORDER BY total_quantity DESC
LIMIT 5;


#Q5. What is the revenue generated by each menu item?

SELECT
	name
	, sum(subtotal) as revenue
FROM menu_items m
LEFT JOIN transactions t 
ON m.item_id = t.item_id
GROUP BY name 
ORDER BY revenue DESC;


#Q6. How many orders has each customer placed?

SELECT
	name
	, count(order_id) as num_orders
FROM customers c
LEFT JOIN orders o
ON c.customer_id = o.customer_id
GROUP BY name;

#Q7. What is the Total revenue generated by each customer?

SELECT 
	name
	, sum(total_amount) as revenue
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id
GROUP BY name;

#Q8. Menu items sold less than 10 times.

SELECT 
	m.name
	, sum(quantity) as total_qty
FROM menu_items m
LEFT JOIN transactions t
ON m.item_id = t.item_id
GROUP BY name
HAVING total_qty < 10;


#09. Number of Orders Placed per Month.
SELECT 
	monthname(order_date) as month_name
    , count(order_id) as num_orders
FROM orders o
GROUP BY month_name;
    

#10. Top 3 Most Profitable Days.
SELECT 
	order_date
	, sum(total_amount) as sale_amt
FROM Orders
GROUP BY order_date
ORDER BY sale_amt DESC
LIMIT 3;
    